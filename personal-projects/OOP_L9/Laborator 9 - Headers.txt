// ProjectLibs.h

#ifndef PROJECTLIBS_H_INCLUDED
#define PROJECTLIBS_H_INCLUDED

#include <iostream>
#include <cstring>

#include "Weather.h"

// Daca este necesar, mai includeti si alte biblioteci aici

#endif // PROJECTLIBS_H_INCLUDED

// Weather.h

#ifndef WEATHER_H_INCLUDED
#define WEATHER_H_INCLUDED

enum Weather {Rain, Sunny, Snow};

#endif // WEATHER_H_INCLUDED

// Car.h

#ifndef CAR_H_INCLUDED
#define CAR_H_INCLUDED

#include "ProjectLibs.h"

class Car {
protected:
    int fuelCapacity;
    int fuelConsumption;
    int averageSpeed[3];
    char* name;

public:
    // TODO: Scrieti destructorul acestei clase care sa fie virtual pentru a evita memory leak
        // OBS: Aveti grija ca nu este pur virtual deci trebuie implementat in .cpp

    // TODO: Modificati aceste metode astfel incat ele sa fie virtuale pure
    float GoCar(bool&, int, int) = 0;
    char* getName() = 0;
};

#endif // CAR_H_INCLUDED

// Mazda.h

#ifndef MAZDA_H_INCLUDED
#define MAZDA_H_INCLUDED

#include "Car.h"

class Mazda : public Car {
public:
    Mazda();

    float GoCar(bool& b, int w, int circuitLength) override;
    char* getName() override;
};

#endif // MAZDA_H_INCLUDED

// Circuit.h

#ifndef CIRCUIT_H_INCLUDED
#define CIRCUIT_H_INCLUDED

#include "ProjectLibs.h"
#include "Mazda.h"
// TODO: Adaugati alte clase precum Dacia, Ford, Toyota, etc.

class Circuit {
private:
    int circuitLength;
    Car* car[10];
    float timeToFinish[10];
    bool finish[10];
    int cars;
    int weather;

public:
    Circuit();
    void SetLength(int);
    void SetWeather(int);
    void AddCar(Car* c);
    void Race();
    void ShowFinalRanks();
    void ShowWhoDidNotFinish();
};

#endif // CIRCUIT_H_INCLUDED